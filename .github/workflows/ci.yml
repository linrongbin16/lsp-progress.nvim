---
name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - master
jobs:
  conventional_commit:
    name: Conventional Commit
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ytanikin/PRConventionalCommits@1.1.0
        with:
          task_types: '["feat","fix","docs","test","ci","refactor","perf","chore","revert","break"]'
  luacheck:
    name: Lua check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: stevearc/nvim-typecheck-action@v1
        with:
          path: lua
          level: Information
          configpath: ".luarc.json"
          neodev-version: stable
      - uses: lunarmodules/luacheck@v1
        with:
          args: lua --config .luacheckrc
      - uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./test
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
  unit_test:
    name: Unit test
    strategy:
      matrix:
        nvim_version: [stable, nightly, v0.6.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit-2.1.0-beta3"
      - uses: leafo/gh-actions-luarocks@v4
      - name: Run Tests
        shell: bash
        run: |
          luarocks install luacheck
          luarocks install vusted
          vusted --shuffle ./test
  code_coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: stable
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit-2.1.0-beta3"
      - uses: leafo/gh-actions-luarocks@v4
      - name: Run Tests
        shell: bash
        run: |
          luarocks install luacheck
          luarocks install luacov
          luarocks install vusted
          vusted --coverage ./test
      - name: Generate Coverage Report
        shell: bash
        run: |
          echo "ls ."
          ls -l .
          echo "run luacov"
          luacov
          echo "ls ."
          ls -l .
          echo "cat ./luacov.report.out"
          cat ./luacov.report.out
      - uses: codecov/codecov-action@v3
        with:
          files: luacov.report.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - luacheck
      - unit_test
      - code_coverage
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: lsp-progress.nvim
      - uses: actions/checkout@v4
      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          tag: stable
          message: "Current stable release: ${{ steps.release.outputs.tag_name }}"
          tag_exists_error: false
          force_push_tag: true
      - name: LuaRocks Upload
        uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          labels: |
            vim
            neovim
