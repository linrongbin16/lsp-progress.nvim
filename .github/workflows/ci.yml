name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  commit:
    name: Commit
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: stevearc/nvim-typecheck-action@v2
        with:
          path: lua
          configpath: ".luarc.json"
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall --no-confirm selene
          selene --config selene.toml ./lua
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./spec
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  unit_test:
    name: Unit test
    strategy:
      matrix:
        nvim_version: [stable, nightly, v0.9.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - name: Run Test Cases
        run: make test
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - lint
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: lsp-progress.nvim
      - uses: actions/checkout@v5
      - name: LuaRocks Upload
        uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          labels: |
            vim
            neovim
